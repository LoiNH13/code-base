// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sms.Persistence;

#nullable disable

namespace Sms.Persistence.Migrations;

[DbContext(typeof(SmsDbContext))]
partial class SmsDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.10")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Sms.Domain.Entities.MoMessage", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<string>("Content")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("content");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("created_on_utc");

                b.Property<bool>("Deleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("deleted");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("deleted_on_utc");

                b.Property<string>("EncryptedMessage")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("encrypted_message");

                b.Property<string>("Metadata")
                    .HasColumnType("text")
                    .HasColumnName("metadata");

                b.Property<int>("MoId")
                    .HasColumnType("integer")
                    .HasColumnName("mo_id");

                b.Property<string>("MoSource")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("mo_source");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("modified_on_utc");

                b.Property<string>("PartnerResponse")
                    .HasColumnType("text")
                    .HasColumnName("partner_response");

                b.Property<string>("Phone")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("phone");

                b.Property<Guid?>("ResMoId")
                    .HasColumnType("uuid")
                    .HasColumnName("res_mo_id");

                b.Property<string>("ServiceNum")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("service_num");

                b.Property<string>("Signature")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("signature");

                b.Property<string>("Telco")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("telco");

                b.HasKey("Id");

                b.HasIndex("ResMoId");

                b.ToTable("mo_messages", (string)null);
            });

        modelBuilder.Entity("Sms.Domain.Entities.ResMo", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("created_on_utc");

                b.Property<bool>("Deleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("deleted");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("deleted_on_utc");

                b.Property<double>("FreeMtPerMo")
                    .HasColumnType("double precision")
                    .HasColumnName("free_mt_per_mo");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("modified_on_utc");

                b.Property<double>("PricePerMo")
                    .HasColumnType("double precision")
                    .HasColumnName("price_per_mo");

                b.Property<string>("ServicePhone")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("service_phone");

                b.HasKey("Id");

                b.HasIndex("ServicePhone")
                    .IsUnique()
                    .HasFilter("deleted = false");

                b.ToTable("res_mo", (string)null);
            });

        modelBuilder.Entity("Sms.Domain.Entities.ResSyntax", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("created_on_utc");

                b.Property<bool>("Deleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("deleted");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("deleted_on_utc");

                b.Property<string>("Description")
                    .HasColumnType("text")
                    .HasColumnName("description");

                b.Property<bool>("Inactive")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("inactive");

                b.Property<string>("Metadata")
                    .HasColumnType("text")
                    .HasColumnName("metadata");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("modified_on_utc");

                b.Property<string>("SyntaxName")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("syntax_name");

                b.Property<string>("SyntaxRegex")
                    .HasColumnType("text")
                    .HasColumnName("syntax_regex");

                b.Property<string>("SyntaxValue")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("syntax_value");

                b.HasKey("Id");

                b.HasIndex("SyntaxValue")
                    .IsUnique()
                    .HasFilter("deleted = false");

                b.ToTable("res_syntaxes", (string)null);
            });

        modelBuilder.Entity("Sms.Domain.Entities.MoMessage", b =>
            {
                b.HasOne("Sms.Domain.Entities.ResMo", "ResMo")
                    .WithMany()
                    .HasForeignKey("ResMoId");

                b.Navigation("ResMo");
            });
#pragma warning restore 612, 618
    }
}
